###################################
# DATA ANALYSIS FOR BUSINESS 2023 #
###################################

###################################
# 2024-feb-29 LECTURE 4           #
###################################

###################################
# ENRICO CIMINELLO                #
# eciminello@luiss.it             #
###################################

# LINEAR MODEL VARIANTS


# Log transformation ------------------------------------------------------


# Log in target variable
# Data generation process
###############################################################################
{set.seed(123)
N = 500
beta0 = .5
beta1 = .2
X = rnorm(n = N, mean = 2, sd = 2)
epsilon = rnorm(100, mean = 0, sd = .8)
Y = exp(beta0 + beta1*X + epsilon)}
###############################################################################


# Let's check our data

hist(Y, breaks = 20, freq = F, col = rgb(.7,.7,.7), border = "white") # right skewed distribution with outliers
boxplot(Y, col = rgb(.7,.7,.7))

# Target variable is strongly right skewed (for instance the countries' GDP)
# If we use log transformation, we get a symmetric distribution
hist(log(Y), breaks = 20, freq = F, col = rgb(.7,.7,.7), border = "white")
#This is why we may be willing to apply log transformation

mod = lm(log(Y) ~ X)
summary(mod)

# Interpretation of the estimates for beta

# For every one-unit increase in independent variable,
# our target variable increases by about ((exp(beta1_hat) â€“ 1)*100)%

beta1_hat = coefficients(mod)[2]
(exp(beta1_hat) - 1)*100

# A unit increase of X implies the 24% increase in Y

# What if we do not use log-scale?
mod = lm(Y ~ X)
summary(mod) 
# We get a "wrong" estimate, lower R-squared, lower F-statistic




# Log in predictors

# Data generation process
#################################################################
{set.seed(123)
N = 500
beta0 = 2
beta1 = 3
sigma0 = 2
X = exp(rnorm(n = N, mean = 0, sd = 1))
hist(X, breaks = 20, col = rgb(.7,.7,.7), border = F)
epsilon = rnorm(500, mean = 0, sd = sigma0)
Y = beta0 + beta1*log(X) + epsilon}
#################################################################


# Let's check our data

plot(log(X), Y, pch = 16, col = rgb(.7,.7,.7,.7))
abline(a = beta0, b = beta1, col = rgb(.8,0,0), lwd = 2)
mod = lm(Y ~ log(X))
summary(mod)

# Interpretation of the estimates for beta

# Divide the coefficient by 100. This tells us that a 1% of increase in the independent 
# variable increases (or decreases) the dependent variable by (coefficient/100) units

# In our example

beta1_hat = coefficients(mod)[2]
beta1_hat/100

# A 1% increase of X implies a 0.03 increase of Y

# What if we did not use log transform for predictor?

plot(X, Y, pch = 16, col = rgb(.7,.7,.7,.7))
abline(a = beta0, b = beta1, col = rgb(.8,0,0), lwd = 2)

mod = lm(Y ~ X)
summary(mod)

# We get a "wrong" estimate, lower R-squared, lower F-statistic 
# (and looking at the scatterplot, a linear model does not seem to be a good idea)




# Log in both predictors and dependent variable

# Data generation process
###########################################################################
{set.seed(123)
N = 500
beta0 = 2
beta1 = 3
sigma0 = 2
X = exp(rnorm(n = N, mean = 0, sd = 1))
hist(X, breaks = 20, col = rgb(.7,.7,.7), border = F)
epsilon = rnorm(500, mean = 0, sd = sigma0)
Y = exp(beta0 + beta1*log(X) + epsilon)}
############################################################################


# Let's check our data

hist(Y, breaks = 20, col = rgb(.7,.7,.7), border = F)
plot((X), (Y), pch = 16, col = rgb(.7,.7,.7,.7)) # 

plot(log(X), log(Y), pch = 16, col = rgb(.7,.7,.7,.7))
abline(a = beta0, b = beta1, col = rgb(.8,0,0), lwd = 2)
mod = lm(log(Y) ~ log(X))
summary(mod)

#An increase of 1% of the independent variable implies an increase of beta_hat% of the dependent variable




# Covariates interaction --------------------------------------------------

# Coefficients interpretation and interaction in linear models (continuous and categorical variables)

#Example 1

# Data generation process
###########################################################################
{set.seed(123)
N = 500
X1 = rnorm(N, 20,5)
X2 = c(rep("A", N/2), 
       rep("B", N/2))
Y = rep(NA, N)
Y[1:(N/2)] = 2 + 3*X1[1:(N/2)] + rnorm(N/2, 0, 4)
Y[(N/2 + 1):N] = 30 + 3*X1[(N/2 + 1):N] + rnorm(N/2, 0, 4)}
###########################################################################

plot(X1,Y, pch = 16, col = ifelse(X2 == "A", rgb(.8,0,0,.3), rgb(0,0,.8,.3)))
legend("top", c(expression(paste(X[2],"= A")), expression(paste(X[2],"= B"))), 
       col = c(rgb(.8,0,0), rgb(0,0,.8)), pch = 16, pt.cex = 2, bty="n")

mod = lm(Y ~ X1 + X2)
summary(mod)

abline(a = coefficients(mod)[1] ,
       b = coefficients(mod)[2], 
       lwd = 2, col = rgb(.8,0,0))
abline(a = coefficients(mod)[1] + coefficients(mod)[3],
       b = coefficients(mod)[2], lwd = 2, col = rgb(0,0,0.8))

mod.interaction = lm(Y ~ X1 + X2 + X1*(X2 == "B"))
summary(mod.interaction)

abline(a = coefficients(mod.interaction)[1] ,
       b = coefficients(mod.interaction)[2], 
       lwd = 2, col = rgb(.8,0,0))

abline(a = coefficients(mod.interaction)[1] + coefficients(mod.interaction)[3],
       b = coefficients(mod.interaction)[2] + coefficients(mod.interaction)[5], 
       lwd = 2, col = rgb(0,0,.8))


# Example 2

# Data generation process
###########################################################################
{set.seed(123)
N = 500
X1 = rnorm(N, 20,5)
X2 = c(rep("A", N/2), 
       rep("B", N/2))
Y = rep(NA, N)
Y[1:(N/2)] = 4 + 3*X1[1:(N/2)] + rnorm(N/2, 0, 4)
Y[(N/2 + 1):N] = 120 - 3*X1[(N/2 + 1):N] + rnorm(N/2, 0, 4)}
###########################################################################

plot(X1,Y, pch = 16, col = ifelse(X2 == "A", rgb(.8,0,0,.3), rgb(0,0,.8,.3)))

legend("top", c(expression(paste(X[2],"= A")), expression(paste(X[2],"= B"))), 
       col = c(rgb(.8,0,0), rgb(0,0,.8)), pch = 16, pt.cex = 2, bty="n")

mod = lm(Y ~ X1 + X2)
summary(mod)

abline(a = coefficients(mod)[1] ,
       b = coefficients(mod)[2], 
       lwd = 2, col = rgb(.8,0,0))
abline(a = coefficients(mod)[1] + coefficients(mod)[3],
       b = coefficients(mod)[2], lwd = 2, col = rgb(0,0,0.8))

mod.interaction = lm(Y ~ X1 + X2 + X1*(X2 == "B"))
summary(mod.interaction)

abline(a = coefficients(mod.interaction)[1] ,
       b = coefficients(mod.interaction)[2], 
       lwd = 2, col = rgb(.8,0,0), lty = 2)

abline(a = coefficients(mod.interaction)[1] + coefficients(mod.interaction)[3],
       b = coefficients(mod.interaction)[2] + coefficients(mod.interaction)[5], 
       lwd = 2, col = rgb(0,0,.8), lty = 2)

legend("topleft", c("No interaction", "Interaction"), 
       col = 1, lty = c(1,2), lwd = 2, bty="n")



# Example 3 (less extreme scenario)

# Data generation process
###########################################################################
{set.seed(123)
N = 500
Price = rnorm(N, mean = 50000, sd = 15000) / 1000
Electric = rep(c("No", "Yes"), each = N/2)
Speed = rep(NA, N)
Speed[which(Electric == "No")] = 80 + 3*Price[which(Electric == "No")] + rnorm(N/2, 0, 20)
Speed[which(Electric == "Yes")] = 120 + 1.5*Price[which(Electric == "Yes")] + rnorm(N/2, 0, 20)}
###########################################################################


mod = lm(Speed ~ Price + Electric)
summary(mod)

plot(Price, Speed, pch = 16, col = rgb(.7,.7,.7, .5), cex = 1.5)
{plot(Price, Speed, pch = 16, col = ifelse(X2 == "A", rgb(0,0,0.8,.3), rgb(0.8,0,0,.3)), cex = 1.5)
  
  legend("topleft", c("Electric", "non-Electric" ), 
         col = c(rgb(0,0,0.8), rgb(0.8,0,0)), pch = 16, pt.cex = 2, bty="n")
  
  abline(a = coefficients(mod)[1], 
         b = coefficients(mod)[2], lwd = 2, col = rgb(0,0,0.8))
  
  abline(a = coefficients(mod)[1] + coefficients(mod)[3], 
         b = coefficients(mod)[2], lwd = 2, col = rgb(0.8,0,0))
}

mod.interaction = lm(Speed ~ Price + Electric + Price*(Electric == "Yes"))
summary(mod.interaction)

{abline(a = coefficients(mod.interaction)[1] + coefficients(mod.interaction)[3], 
        b = coefficients(mod.interaction)[2] + coefficients(mod.interaction)[5], 
        col = rgb(0.8,0,0), lwd = 2, lty = 2)
  
  abline(a = coefficients(mod.interaction)[1], 
         b = coefficients(mod.interaction)[2],
         col = rgb(0,0,0.8), lwd = 2, lty = 2)}

{plot(Price, Speed, pch = 16, col = ifelse(X2 == "A", rgb(0,0,0.8,.3), rgb(0.8,0,0,.3)), cex = 1.5)
  
  abline(a = coefficients(mod)[1], 
         b = coefficients(mod)[2], lwd = 2, col = rgb(0,0,0.8))
  
  abline(a = coefficients(mod)[1] + coefficients(mod)[3], 
         b = coefficients(mod)[2], lwd = 2, col = rgb(.8,0,0))
  
  legend("topleft", c("Electric", " Non-electric" ), 
         col = c(rgb(.8,0,0), rgb(0,0,.8)), pch = 16, pt.cex = 2, bty="n")}


{plot(Price, Speed, pch = 16, col = ifelse(X2 == "A", rgb(0,0,0.8,.3), rgb(0.8,0,0,.3)), cex = 1.5)
  
  abline(a = coefficients(mod.interaction)[1] + coefficients(mod.interaction)[3], 
         b = coefficients(mod.interaction)[2] + coefficients(mod.interaction)[5], 
         col = rgb(.8,0,0), lwd = 2, lty = 2)
  
  abline(a = coefficients(mod.interaction)[1], 
         b = coefficients(mod.interaction)[2],
         col = rgb(0,0,0.8), lwd = 2, lty = 2)
  
  legend("topleft", c("Electric", " Non-electric" ), 
         col = c(rgb(.8,0,0), rgb(0,0,.8)), pch = 16, pt.cex = 2, bty="n")}

