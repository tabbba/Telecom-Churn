scale_fill_manual(values = c("False" = "violet", "True" = "skyblue"), labels = c("False" = "No", "True" = "Yes")) +
labs(title = "Percentage of Churn", fill = "Churn") +
geom_text(aes(label = paste0(round(Percent, 1), "%")), position = position_stack(vjust = 0.5)) +
theme(plot.title = element_text(hjust = 0.5))
continuous_vars <- data[, sapply(data, is.numeric)]
categorical_vars <- data[, sapply(data, is.factor) & !names(data) %in% "Churn"]
# univariate analysis for categorical variables (State, International.plan, Voice.mail.plan)
long_data <- categorical_vars %>%
pivot_longer(cols = everything(), names_to = "Category", values_to = "Value")
ggplot(long_data, aes(x = Value)) +
geom_bar(fill = "skyblue", color = "black") +
facet_wrap(~ Category, scales = "free_x", nrow = 2, ncol = 2) +
labs(title = "Distribution of Categorical Variables", x = NULL, y = "Count") +
theme_minimal() +
theme(
strip.text = element_text(face = "bold", size = 12),
axis.text.x = element_text(angle = 90, hjust = 1, size = 10),
plot.title = element_text(hjust = 0.5, size = 16),
legend.position = "none"
)
# voice mail and international plan are imbalanced
# also our target variable is imbalanced
# univariate analysis for numerical variables
### KDE plots
continuous <- data[, sapply(data, is.numeric) | names(data) == "Churn"]
continuous %>%
pivot_longer(cols = -Churn, names_to = "metric", values_to = "value") %>%
ggplot(aes(value, color = as.factor(Churn))) +
geom_density(alpha = 0.3) +
facet_wrap(vars(metric), scales = "free") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
scale_color_discrete(name = "Churn Status", labels = c("No", "Yes")) +
labs(title = "Numeric Features Univariate Distribution by Churn Status") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold")
)
#There's a noticeable difference in the distribution of customer service calls
# between those who churned and those who did not.
# Customers who churned seem to make more customer service calls, which could
# indicate a relationship between customer satisfaction and churn.
# It appears that customers who churned tend to have slightly higher day minutes
# and charges. This might suggest that customers with higher usage during the day are more likely to churn.
# something similar with total.day.charge
# the others follow more or less the same trend
# This will list any non-numeric columns in continuous_vars
# corr with continous variables
correlation_matrix <- cor(continuous_vars)
corrplot(correlation_matrix, method = "number")
cor_matrix <- cor(continuous_vars, use="complete.obs")
corrplot(cor_matrix,
method="color",
order="hclust",
tl.col="black",
tl.srt = 45,
tl.cex = 0.6,
addCoef.col = 'white',
number.cex = 0.6,
col = COL1("Blues", 10),
type = "lower",
diag=FALSE,
title = "Correlation Plot of Numerical Variables",)
ggplot(data, aes(x = Customer.service.calls, fill = Churn)) +
geom_bar(position = "dodge", color = "black") +
labs(title = "Churn by Customer Service Calls", x = "Customer Service Calls", y = "Count") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold"),
legend.position = "top") +
scale_fill_manual(values = c("skyblue", "violet"), labels = c("No", "Yes"))
data %>%
ggplot(aes(x = Customer.service.calls, fill = Churn)) +
geom_bar(position = "dodge") +
labs(title = "Churn by Customer Service Calls", x = "Customer Service Calls", y = "Count", fill = "Churn") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
data %>%
group_by(Customer.service.calls, Churn) %>%
summarise(Count = n(), .groups = "drop") %>%
ggplot(aes(x = Customer.service.calls, y = Count, color = Churn)) +
geom_line() +
geom_point() +
labs(title = "Churn by Customer Service Calls", x = "Customer Service Calls", y = "Count", color = "Churn") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
# analysis of churn and day minutes
data %>%
ggplot(aes(x = Churn, y = Total.day.minutes, fill = Churn)) +
geom_boxplot() +
labs(title = "Churn by Total Day Minutes", x = "Churn", y = "Total Day Minutes", fill = "Churn") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
data %>%
ggplot(aes(x = Churn, y = Total.day.charge, fill = Churn)) +
geom_boxplot() +
labs(title = "Churn by Total Day Charge", x = "Churn", y = "Total Day Charge", fill = "Churn") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
long_data <- data %>%
select(Churn, Total.day.minutes, Total.day.charge) %>%
pivot_longer(cols = c(Total.day.minutes, Total.day.charge),
names_to = "Measure",
values_to = "Value")
# Create the combined plot
ggplot(long_data, aes(x = Churn, y = Value, fill = Churn)) +
geom_boxplot() +
facet_wrap(~ Measure, scales = "free_y") + # Free scales for y-axis, separate per facet
labs(title = "Churn by Total Day Minutes and Total Day Charge",
x = "Churn",
y = "Value",
fill = "Churn") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),
strip.background = element_blank(),
strip.text.x = element_text(size = 12)
)
# correlation matrix
correlation_matrix <- cor(continuous_vars)
corrplot(correlation_matrix, method = "number", type = "upper", tl.cex = 0.7)
data %>%
group_by(International.plan, Churn) %>%
summarise(Count = n(), .groups = "drop") %>%
ggplot(aes(x = International.plan, y = Count, fill = Churn)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Churn by International Plan", x = "International Plan", y = "Count", fill = "Churn") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5)
data %>%
theme(plot.title = element_text(hjust = 0.5)
# other analysis
# churn by international plan
data %>%
# other analysis
# churn by international plan
data %>%
group_by(International.plan, Churn) %>%
summarise(Count = n(), .groups = "drop") %>%
ggplot(aes(x = International.plan, y = Count, fill = Churn)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Churn by International Plan", x = "International Plan", y = "Count", fill = "Churn") +
theme_minimal()
data %>%
filter(International.plan == "Yes") %>%
group_by(Churn) %>%
summarise(Count = n(), .groups = "drop") %>%
mutate(Percent = Count / sum(Count) * 100) %>%
ggplot(aes(x = "", y = Percent, fill = Churn)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
theme_void() +
scale_fill_manual(values = c("False" = "violet", "True" = "skyblue"), labels = c("False" = "No", "True" = "Yes")) +
labs(title = "Percentage of Churn for Customers with International Plan", fill = "Churn") +
geom_text(aes(label = paste0(round(Percent, 1), "%")), position = position_stack(vjust = 0.5) ) +
theme(plot.title = element_text(hjust = 0.5)
data %>%
# we see that almost all customers that have an international plan churned
# let's see in a pie chart the percentage of international customers that churned
data %>%
filter(International.plan == "Yes") %>%
group_by(Churn) %>%
summarise(Count = n(), .groups = "drop") %>%
mutate(Percent = Count / sum(Count) * 100) %>%
ggplot(aes(x = "", y = Percent, fill = Churn)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
theme_void() +
scale_fill_manual(values = c("False" = "violet", "True" = "skyblue"), labels = c("False" = "No", "True" = "Yes")) +
labs(title = "Percentage of Churn for Customers with International Plan", fill = "Churn") +
geom_text(aes(label = paste0(round(Percent, 1), "%")), position = position_stack(vjust = 0.5) ) +
# we see that almost all customers that have an international plan churned
# let's see in a pie chart the percentage of international customers that churned
data %>%
# we see that almost all customers that have an international plan churned
# let's see in a pie chart the percentage of international customers that churned
data %>%
# we see that almost all customers that have an international plan churned
# let's see in a pie chart the percentage of international customers that churned
data %>%
library(ggplot2)
data = read.csv("TelecomChurn (1).csv")
library(ggplot2)
library(corrplot)
library(dplyr)
library(tidyr)
dim(data) # 3333 rows and 20 columns
head(data)
str(data)
sum(is.na(data)) # no missing values
summary(data)
# Count of Distinct Features
for (col in names(data)) {
cat("Distinct values in", col, ":\n")
print(unique(data[[col]]))
cat("\n")
}
anyDuplicated(data) # no duplicates
# converting characters to factor
data$State = as.factor(data$State)
data$International.plan = as.factor(data$International.plan)
data$Voice.mail.plan = as.factor(data$Voice.mail.plan)
data$Churn = as.factor(data$Churn)
# checking the distribution of our target
# We will first calculate the proportions of Churn
churn_percent <- data %>%
group_by(Churn) %>%
summarise(Count = n(), .groups = "drop") %>%
mutate(Percent = Count / sum(Count) * 100)
ggplot(churn_percent, aes(x = "", y = Percent, fill = Churn)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
theme_void() +
scale_fill_manual(values = c("False" = "violet", "True" = "skyblue"), labels = c("False" = "No", "True" = "Yes")) +
labs(title = "Percentage of Churn", fill = "Churn") +
geom_text(aes(label = paste0(round(Percent, 1), "%")), position = position_stack(vjust = 0.5)) +
theme(plot.title = element_text(hjust = 0.5))
continuous_vars <- data[, sapply(data, is.numeric)]
categorical_vars <- data[, sapply(data, is.factor) & !names(data) %in% "Churn"]
# univariate analysis for categorical variables (State, International.plan, Voice.mail.plan)
long_data <- categorical_vars %>%
pivot_longer(cols = everything(), names_to = "Category", values_to = "Value")
ggplot(long_data, aes(x = Value)) +
geom_bar(fill = "skyblue", color = "black") +
facet_wrap(~ Category, scales = "free_x", nrow = 2, ncol = 2) +
labs(title = "Distribution of Categorical Variables", x = NULL, y = "Count") +
theme_minimal() +
theme(
strip.text = element_text(face = "bold", size = 12),
axis.text.x = element_text(angle = 90, hjust = 1, size = 10),
plot.title = element_text(hjust = 0.5, size = 16),
legend.position = "none"
)
# voice mail and international plan are imbalanced
# also our target variable is imbalanced
# univariate analysis for numerical variables
### KDE plots
continuous <- data[, sapply(data, is.numeric) | names(data) == "Churn"]
continuous %>%
pivot_longer(cols = -Churn, names_to = "metric", values_to = "value") %>%
ggplot(aes(value, color = as.factor(Churn))) +
geom_density(alpha = 0.3) +
facet_wrap(vars(metric), scales = "free") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
scale_color_discrete(name = "Churn Status", labels = c("No", "Yes")) +
labs(title = "Numeric Features Univariate Distribution by Churn Status") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold")
)
#There's a noticeable difference in the distribution of customer service calls
# between those who churned and those who did not.
# Customers who churned seem to make more customer service calls, which could
# indicate a relationship between customer satisfaction and churn.
# It appears that customers who churned tend to have slightly higher day minutes
# and charges. This might suggest that customers with higher usage during the day are more likely to churn.
# something similar with total.day.charge
# the others follow more or less the same trend
# This will list any non-numeric columns in continuous_vars
# analysis of churn and customer service calls
data %>%
group_by(Customer.service.calls, Churn) %>%
summarise(Count = n(), .groups = "drop") %>%
ggplot(aes(x = Customer.service.calls, y = Count, color = Churn)) +
geom_line() +
geom_point() +
labs(title = "Churn by Customer Service Calls", x = "Customer Service Calls", y = "Count", color = "Churn") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
# customers who churned made more customer service calls
# analysis of churn and day minutes and day charge
# customers who churned have higher total day minutes
# customers who churned have higher total day charge
long_data <- data %>%
select(Churn, Total.day.minutes, Total.day.charge) %>%
pivot_longer(cols = c(Total.day.minutes, Total.day.charge),
names_to = "Measure",
values_to = "Value")
ggplot(long_data, aes(x = Churn, y = Value, fill = Churn)) +
geom_boxplot() +
facet_wrap(~ Measure, scales = "free_y") +
labs(title = "Churn by Total Day Minutes and Total Day Charge",
x = "Churn",
y = "Value",
fill = "Churn") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),
strip.background = element_blank(),
strip.text.x = element_text(size = 12)
)
# other analysis
# churn by international plan
data %>%
group_by(International.plan, Churn) %>%
summarise(Count = n(), .groups = "drop") %>%
ggplot(aes(x = International.plan, y = Count, fill = Churn)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Churn by International Plan", x = "International Plan", y = "Count", fill = "Churn") +
theme_minimal()
data %>%
filter(International.plan == "Yes") %>%
group_by(Churn) %>%
summarise(Count = n(), .groups = "drop") %>%
mutate(Percent = Count / sum(Count) * 100) %>%
ggplot(aes(x = "", y = Percent, fill = Churn)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
theme_void() +
scale_fill_manual(values = c("False" = "violet", "True" = "skyblue"), labels = c("False" = "No", "True" = "Yes")) +
labs(title = "Percentage of Churn for Customers with International Plan", fill = "Churn") +
geom_text(aes(label = paste0(round(Percent, 1), "%")), position = position_stack(vjust = 0.5) ) +
theme(plot.title = element_text(hjust = 0.5)
data %>%
# we see that almost all customers that have an international plan churned
# let's see in a pie chart the percentage of international customers that churned
data %>%
filter(International.plan == "Yes") %>%
group_by(Churn) %>%
summarise(Count = n(), .groups = "drop") %>%
mutate(Percent = Count / sum(Count) * 100) %>%
ggplot(aes(x = "", y = Percent, fill = Churn)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
theme_void() +
scale_fill_manual(values = c("False" = "violet", "True" = "skyblue"), labels = c("False" = "No", "True" = "Yes")) +
labs(title = "Percentage of Churn for Customers with International Plan", fill = "Churn") +
geom_text(aes(label = paste0(round(Percent, 1), "%")), position = position_stack(vjust = 0.5) ) +
# we see that almost all customers that have an international plan churned
# let's see in a pie chart the percentage of international customers that churned
data %>%
filter(International.plan == "Yes") %>%
group_by(Churn) %>%
summarise(Count = n(), .groups = "drop") %>%
mutate(Percent = Count / sum(Count) * 100) %>%
ggplot(aes(x = "", y = Percent, fill = Churn)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
theme_void() +
scale_fill_manual(values = c("False" = "violet", "True" = "skyblue"), labels = c("False" = "No", "True" = "Yes")) +
labs(title = "Percentage of Churn for Customers with International Plan", fill = "Churn") +
geom_text(aes(label = paste0(round(Percent, 1), "%")), position = position_stack(vjust = 0.5) )
data %>%
filter(International.plan == "Yes") %>%
group_by(Churn) %>%
summarise(Count = n(), .groups = "drop") %>%
mutate(Percent = Count / sum(Count) * 100) %>%
ggplot(aes(x = "", y = Percent, fill = Churn)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
theme_void() +
scale_fill_manual(values = c("False" = "violet", "True" = "skyblue"), labels = c("False" = "No", "True" = "Yes")) +
labs(title = "Percentage of Churn for Customers with International Plan", fill = "Churn") +
geom_text(aes(label = paste0(round(Percent, 1), "%")), position = position_stack(vjust = 0.5) )
data %>%
group_by(International.plan, Churn) %>%
summarise(Count = n(), .groups = "drop") %>%
ggplot(aes(x = International.plan, y = Count, fill = Churn)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Churn by International Plan", x = "International Plan", y = "Count", fill = "Churn") +
theme_minimal()
data %>%
filter(International.plan == "Yes") %>%
group_by(Churn) %>%
summarise(Count = n(), .groups = "drop") %>%
mutate(Percent = Count / sum(Count) * 100) %>%
ggplot(aes(x = "", y = Percent, fill = Churn)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
theme_void() +
scale_fill_manual(values = c("False" = "violet", "True" = "skyblue"), labels = c("False" = "No", "True" = "Yes")) +
labs(title = "Percentage of Churn for Customers with International Plan", fill = "Churn") +
geom_text(aes(label = paste0(round(Percent, 1), "%")), position = position_stack(vjust = 0.5) )
data %>%
group_by(International.plan, Churn) %>%
summarise(Count = n(), .groups = "drop") %>%
ggplot(aes(x = International.plan, y = Count, fill = Churn)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9)) +
geom_text(aes(label = Count),
position = position_dodge(width = 0.9),
vjust = -0.5, # Adjust this value to position the text above the bars
size = 3.5) +
labs(title = "Churn by International Plan", x = "International Plan", y = "Count", fill = "Churn") +
theme_minimal()
data %>%
filter(International.plan == "Yes") %>%
group_by(Churn) %>%
summarise(Count = n(), .groups = "drop") %>%
mutate(Percent = Count / sum(Count) * 100) %>%
ggplot(aes(x = "", y = Percent, fill = Churn)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
theme_void() +
scale_fill_manual(values = c("False" = "violet", "True" = "skyblue"), labels = c("False" = "No", "True" = "Yes")) +
labs(title = "Percentage of Churn for Customers with International Plan", fill = "Churn") +
geom_text(aes(label = paste0(round(Percent, 1), "%")), position = position_stack(vjust = 0.5) )
data %>%
filter(International.plan == "Yes") %>%
group_by(Churn) %>%
summarise(Count = n(), .groups = "drop") %>%
ggplot(aes(x = "", y = Count, fill = Churn)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
theme_void() +
scale_fill_manual(values = c("False" = "violet", "True" = "skyblue"), labels = c("False" = "No", "True" = "Yes")) +
labs(title = "Percentage of Churn for Customers with International Plan", fill = "Churn") +
geom_text(aes(label = paste0(round(Count / sum(Count) * 100, 1), "%")), position = position_stack(vjust = 0.5) ) +
theme(plot.title = element_text(hjust = 0.5))
# churn by international plan
data %>%
group_by(International.plan, Churn) %>%
summarise(Count = n(), .groups = "drop") %>%
ggplot(aes(x = International.plan, y = Count, fill = Churn)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9)) +
geom_text(aes(label = Count),
position = position_dodge(width = 0.9),
vjust = -0.5,
size = 3.5) +
labs(title = "Churn by International Plan", x = "International Plan", y = "Count", fill = "Churn") +
theme_minimal()
data %>%
group_by(State, International.plan) %>%
summarise(Count = n(), .groups = "drop") %>%
ggplot(aes(x = State, y = Count, fill = International.plan)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "International Plan by State", x = "State", y = "Count", fill = "International Plan") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# other analysis useful
# churn by voice mail plan
data %>%
group_by(Voice.mail.plan, Churn) %>%
summarise(Count = n(), .groups = "drop") %>%
ggplot(aes(x = Voice.mail.plan, y = Count, fill = Churn)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9)) +
geom_text(aes(label = Count),
position = position_dodge(width = 0.9),
vjust = -0.5,
size = 3.5) +
labs(title = "Churn by Voice Mail Plan", x = "Voice Mail Plan", y = "Count", fill = "Churn") +
theme_minimal()
str(data)
library(car)
vif(data)
data %>%
group_by(State, Churn) %>%
summarise(Count = n(), .groups = "drop") %>%
mutate(Percent = Count / sum(Count) * 100) %>%
ggplot(aes(x = State, y = Churn, fill = Percent)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "red") +
labs(title = "Churn Rate by State", x = "State", y = "Churn", fill = "Percent") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 90, hjust = 1)
)
data %>%
select(Churn, Total.day.charge, Total.eve.charge, Total.night.charge, Total.intl.charge) %>%
pivot_longer(cols = c(Total.day.charge, Total.eve.charge, Total.night.charge, Total.intl.charge),
names_to = "Measure",
values_to = "Value") %>%
ggplot(aes(x = Value, fill = Churn)) +
geom_density(alpha = 0.3) +
facet_wrap(~ Measure, scales = "free") +
labs(title = "Churn by Total Charges", x = "Value", fill = "Churn") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 45, hjust = 1)
)
data %>%
group_by(State, Churn) %>%
summarise(Count = n(), .groups = "drop") %>%
mutate(Percent = Count / sum(Count) * 100) %>%
ggplot(aes(x = State, y = Churn, fill = Percent)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "red") +
labs(title = "Churn Rate by State", x = "State", y = "Churn", fill = "Percent") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 90, hjust = 1)
)
data %>%
group_by(State, Churn) %>%
summarise(Count = n(), .groups = "drop") %>%
mutate(Percent = Count / sum(Count) * 100) %>%
ggplot(aes(x = reorder(State, -Percent), y = Churn, fill = Percent)) +  # Reorder states by percent for clearer comparison
geom_tile(color = "grey", size = 0.7) +  # Add borders to the tiles for better visual separation
scale_fill_gradient(low = "white", high = "steelblue", name = "Churn Rate (%)") +  # Adjust the color scale for better visibility
labs(title = "Churn Rate by State", x = "State", y = "Churn Status", fill = "Churn Rate (%)") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title = element_text(size = 12, face = "bold"),
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, color = "black", size = 10),
axis.text.y = element_text(size = 10, color = "black"),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white", colour = "black")
)
