library(dplyr)
library(cluster)
library(factoextra)
## K-means clustering
#### Convert categorical variables and scale data
library(dplyr)
clustering_data <- read.csv("TelecomChurn.csv")
clustering_data$Total.minutes <- clustering_data$Total.day.minutes + clustering_data$Total.eve.minutes + clustering_data$Total.night.minutes + clustering_data$Total.intl.minutes
clustering_data <- clustering_data[, !(names(clustering_data) %in% c("Total.day.minutes", "Total.eve.minutes", "Total.night.minutes", "Total.intl.minutes"))]
# total_charge
clustering_data$Total.charge <- clustering_data$Total.day.charge + clustering_data$Total.eve.charge + clustering_data$Total.night.charge + clustering_data$Total.intl.charge
clustering_data <- clustering_data[, !(names(clustering_data) %in% c("Total.day.charge", "Total.eve.charge", "Total.night.charge", "Total.intl.charge"))]
# total call
clustering_data$Total.calls <- clustering_data$Total.day.calls + clustering_data$Total.eve.calls + clustering_data$Total.night.calls + clustering_data$Total.intl.calls
clustering_data <- clustering_data[, !(names(clustering_data) %in% c("Total.day.calls", "Total.eve.calls", "Total.night.calls", "Total.intl.calls"))]
numerical_vars <- sapply(clustering_data, is.numeric)
clustering_data[numerical_vars] <- scale(clustering_data[numerical_vars])
convert_yes_no <- function(column) {
ifelse(column == "Yes", 1, 0)
}
clustering_data$International.plan <- convert_yes_no(clustering_data$International.plan)
clustering_data$Voice.mail.plan <- convert_yes_no(clustering_data$Voice.mail.plan)
head(clustering_data)
data_prepared <- clustering_data %>%
select(International.plan, Voice.mail.plan, Number.vmail.messages, Total.minutes, Total.charge, Total.calls)
head(data_prepared)
# elbow rule plot
fviz_nbclust(data_prepared, kmeans, method = "wss") +
labs(subtitle = "WSS - Elbow method")
# avg silhouette plot
fviz_nbclust(data_prepared, kmeans, method = "silhouette") +
labs(subtitle = "Silhouette method")
K <- 3
set.seed(1)
km_result <- kmeans(data_prepared, centers = K, nstart = 25, iter.max = 100)
#### plot
data$cluster <- km_result$cluster
#### we perform PCA to visualize the clusters in a better way, selecting only the first 2 components
pca <- prcomp(data_prepared)
pca_df <- data.frame(pca$x[, 1:2], Cluster = data$cluster)
pca <- prcomp(data_prepared)
pca_df <- data.frame(pca$x[, 1:2], Cluster = data$cluster)
#### silhouette method -->  3 has the highest silhouette width (we want an high silhouette width)
s_i1 <- silhouette(km_result$cluster, dist(data_prepared))
avg_sil_width <- mean(s_i1[, 3])
print(paste("Average silhouette width:", avg_sil_width))
k_values <- 2:10
avg_sil_widths <- sapply(k_values, function(k) {
set.seed(1)
km <- kmeans(data_prepared, centers = k, nstart = 25)
sil_widths <- silhouette(km$cluster, dist(data_prepared))
mean(sil_widths[, 3])
})
plot(k_values, avg_sil_widths, type = 'b', pch = 19, col = 'blue',
xlab = 'Number of Clusters', ylab = 'Average Silhouette Width',
main = 'Average Silhouette Width for Different k Values')
#### it seems that 3 was our lucky guess for the number of clusters
dist_matrix <- dist(data_prepared, method = "euclidean")
hc <- hclust(dist_matrix, method = "ward.D2")
plot(hc, main = "Dendrogram for Hierarchical Clustering", sub = "", xlab = "")
clusters <- cutree(hc, k = 3)
data$cluster_hc <- as.factor(clusters)
data = read.csv("~/Desktop/Telecom-Churn/TelecomChurn.csv")
data$State = as.factor(data$State)
data$International.plan = as.factor(data$International.plan)
data$Voice.mail.plan = as.factor(data$Voice.mail.plan)
data$Churn = as.factor(data$Churn)
dist_matrix <- dist(data_prepared, method = "euclidean")
hc <- hclust(dist_matrix, method = "ward.D2")
plot(hc, main = "Dendrogram for Hierarchical Clustering", sub = "", xlab = "")
clusters <- cutree(hc, k = 3)
data$cluster_hc <- as.factor(clusters)
pca_df$ClusterHC <- as.factor(clusters)
dist_matrix <- dist(data_prepared, method = "euclidean")
hc <- hclust(dist_matrix, method = "ward.D2")
plot(hc, main = "Dendrogram for Hierarchical Clustering", sub = "", xlab = "")
clusters <- cutree(hc, k = 3)
data$cluster_hc <- as.factor(clusters)
pca_df$ClusterHC <- as.factor(clusters)
s_i1 <- silhouette(km_result$cluster, dist(data_prepared))
avg_sil_width <- mean(s_i1[, 3])
print(paste("Average silhouette width:", avg_sil_width))
sil_widths_hc <- silhouette(clusters, dist_matrix)
avg_sil_width_hc <- mean(sil_widths_hc[, 3])
print(paste("Average silhouette width for hierarchical clustering:", avg_sil_width_hc))
pca_df$ClusterHC <- as.factor(clusters)
pca <- prcomp(data_prepared)
pca_df <- data.frame(pca$x[, 1:2], Cluster = data$cluster)
pca_df$ClusterHC <- as.factor(clusters)
ggplot(pca_df, aes(x = PC1, y = PC2, color = ClusterHC)) +
geom_point(alpha = 0.6, size = 3) +
scale_color_brewer(palette = "Set1") +
labs(title = "PCA Plot of Hierarchical Clusters",
x = "Principal Component 1",
y = "Principal Component 2") +
theme_minimal()
sil_widths_hc <- silhouette(clusters, dist_matrix)
avg_sil_width_hc <- mean(sil_widths_hc[, 3])
print(paste("Average silhouette width for hierarchical clustering:", avg_sil_width_hc))
source("~/Desktop/Telecom-Churn/telecom_churn.R")
